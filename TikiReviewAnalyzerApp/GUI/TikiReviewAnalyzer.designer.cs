#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GUI
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TikiReviewAnalyzer")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProductCategory(ProductCategory instance);
    partial void UpdateProductCategory(ProductCategory instance);
    partial void DeleteProductCategory(ProductCategory instance);
    partial void InsertModel(Model instance);
    partial void UpdateModel(Model instance);
    partial void DeleteModel(Model instance);
    partial void InsertProductDetail(ProductDetail instance);
    partial void UpdateProductDetail(ProductDetail instance);
    partial void DeleteProductDetail(ProductDetail instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertReview(Review instance);
    partial void UpdateReview(Review instance);
    partial void DeleteReview(Review instance);
    partial void InsertReviewGPT(ReviewGPT instance);
    partial void UpdateReviewGPT(ReviewGPT instance);
    partial void DeleteReviewGPT(ReviewGPT instance);
    partial void InsertReviewGPTCate(ReviewGPTCate instance);
    partial void UpdateReviewGPTCate(ReviewGPTCate instance);
    partial void DeleteReviewGPTCate(ReviewGPTCate instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertInfo(Info instance);
    partial void UpdateInfo(Info instance);
    partial void DeleteInfo(Info instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::GUI.Properties.Settings.Default.TikiReviewAnalyzerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ProductCategory> ProductCategories
		{
			get
			{
				return this.GetTable<ProductCategory>();
			}
		}
		
		public System.Data.Linq.Table<Model> Models
		{
			get
			{
				return this.GetTable<Model>();
			}
		}
		
		public System.Data.Linq.Table<ProductDetail> ProductDetails
		{
			get
			{
				return this.GetTable<ProductDetail>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Review> Reviews
		{
			get
			{
				return this.GetTable<Review>();
			}
		}
		
		public System.Data.Linq.Table<ReviewGPT> ReviewGPTs
		{
			get
			{
				return this.GetTable<ReviewGPT>();
			}
		}
		
		public System.Data.Linq.Table<ReviewGPTCate> ReviewGPTCates
		{
			get
			{
				return this.GetTable<ReviewGPTCate>();
			}
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Info> Infos
		{
			get
			{
				return this.GetTable<Info>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tiki.ProductCategory")]
	public partial class ProductCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ProductCategoryID;
		
		private string _ProductCategoryText;
		
		private string _ProductCategoryLink;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProductCategoryIDChanging(string value);
    partial void OnProductCategoryIDChanged();
    partial void OnProductCategoryTextChanging(string value);
    partial void OnProductCategoryTextChanged();
    partial void OnProductCategoryLinkChanging(string value);
    partial void OnProductCategoryLinkChanged();
    #endregion
		
		public ProductCategory()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductCategoryID
		{
			get
			{
				return this._ProductCategoryID;
			}
			set
			{
				if ((this._ProductCategoryID != value))
				{
					this.OnProductCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ProductCategoryID = value;
					this.SendPropertyChanged("ProductCategoryID");
					this.OnProductCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ProductCategoryText
		{
			get
			{
				return this._ProductCategoryText;
			}
			set
			{
				if ((this._ProductCategoryText != value))
				{
					this.OnProductCategoryTextChanging(value);
					this.SendPropertyChanging();
					this._ProductCategoryText = value;
					this.SendPropertyChanged("ProductCategoryText");
					this.OnProductCategoryTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryLink", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ProductCategoryLink
		{
			get
			{
				return this._ProductCategoryLink;
			}
			set
			{
				if ((this._ProductCategoryLink != value))
				{
					this.OnProductCategoryLinkChanging(value);
					this.SendPropertyChanging();
					this._ProductCategoryLink = value;
					this.SendPropertyChanged("ProductCategoryLink");
					this.OnProductCategoryLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCategory_Product", Storage="_Products", ThisKey="ProductCategoryID", OtherKey="ProductCategoryID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductCategory = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Users.Model")]
	public partial class Model : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDModel;
		
		private int _AccID;
		
		private string _ModelName;
		
		private string _ModelDescription;
		
		private System.Nullable<System.DateTime> _DateCreate;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDModelChanging(int value);
    partial void OnIDModelChanged();
    partial void OnAccIDChanging(int value);
    partial void OnAccIDChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnModelDescriptionChanging(string value);
    partial void OnModelDescriptionChanged();
    partial void OnDateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreateChanged();
    #endregion
		
		public Model()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDModel", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDModel
		{
			get
			{
				return this._IDModel;
			}
			set
			{
				if ((this._IDModel != value))
				{
					this.OnIDModelChanging(value);
					this.SendPropertyChanging();
					this._IDModel = value;
					this.SendPropertyChanged("IDModel");
					this.OnIDModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccID", DbType="Int NOT NULL")]
		public int AccID
		{
			get
			{
				return this._AccID;
			}
			set
			{
				if ((this._AccID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccIDChanging(value);
					this.SendPropertyChanging();
					this._AccID = value;
					this.SendPropertyChanged("AccID");
					this.OnAccIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelDescription", DbType="NVarChar(MAX)")]
		public string ModelDescription
		{
			get
			{
				return this._ModelDescription;
			}
			set
			{
				if ((this._ModelDescription != value))
				{
					this.OnModelDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ModelDescription = value;
					this.SendPropertyChanged("ModelDescription");
					this.OnModelDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Model", Storage="_Account", ThisKey="AccID", OtherKey="AccID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Models.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Models.Add(this);
						this._AccID = value.AccID;
					}
					else
					{
						this._AccID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tiki.ProductDetail")]
	public partial class ProductDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ProductID;
		
		private string _ProdDescriptions;
		
		private string _ProdShortDescriptions;
		
		private string _ProdURL;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnProdDescriptionsChanging(string value);
    partial void OnProdDescriptionsChanged();
    partial void OnProdShortDescriptionsChanging(string value);
    partial void OnProdShortDescriptionsChanged();
    partial void OnProdURLChanging(string value);
    partial void OnProdURLChanged();
    #endregion
		
		public ProductDetail()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProdDescriptions", DbType="NVarChar(MAX)")]
		public string ProdDescriptions
		{
			get
			{
				return this._ProdDescriptions;
			}
			set
			{
				if ((this._ProdDescriptions != value))
				{
					this.OnProdDescriptionsChanging(value);
					this.SendPropertyChanging();
					this._ProdDescriptions = value;
					this.SendPropertyChanged("ProdDescriptions");
					this.OnProdDescriptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProdShortDescriptions", DbType="NVarChar(MAX)")]
		public string ProdShortDescriptions
		{
			get
			{
				return this._ProdShortDescriptions;
			}
			set
			{
				if ((this._ProdShortDescriptions != value))
				{
					this.OnProdShortDescriptionsChanging(value);
					this.SendPropertyChanging();
					this._ProdShortDescriptions = value;
					this.SendPropertyChanged("ProdShortDescriptions");
					this.OnProdShortDescriptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProdURL", DbType="NVarChar(MAX)")]
		public string ProdURL
		{
			get
			{
				return this._ProdURL;
			}
			set
			{
				if ((this._ProdURL != value))
				{
					this.OnProdURLChanging(value);
					this.SendPropertyChanging();
					this._ProdURL = value;
					this.SendPropertyChanged("ProdURL");
					this.OnProdURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductDetail", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductDetails.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tiki.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ProductCategoryID;
		
		private string _ProductID;
		
		private string _ProductSKU;
		
		private string _ProductName;
		
		private int _ProductOriginalPrice;
		
		private int _ProductPrice;
		
		private int _ProductQuantitySold;
		
		private decimal _RatingAverage;
		
		private System.Nullable<int> _ReviewCount;
		
		private System.Nullable<int> _EarliestDeliveryEstimate;
		
		private System.Nullable<int> _StandardDeliveryEstimate;
		
		private string _UrlPath;
		
		private int _AccID;
		
		private System.Nullable<int> _IDData;
		
		private EntitySet<ProductDetail> _ProductDetails;
		
		private EntitySet<Review> _Reviews;
		
		private EntitySet<ReviewGPTCate> _ReviewGPTCates;
		
		private EntityRef<ProductCategory> _ProductCategory;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Info> _Info;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProductCategoryIDChanging(string value);
    partial void OnProductCategoryIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnProductSKUChanging(string value);
    partial void OnProductSKUChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnProductOriginalPriceChanging(int value);
    partial void OnProductOriginalPriceChanged();
    partial void OnProductPriceChanging(int value);
    partial void OnProductPriceChanged();
    partial void OnProductQuantitySoldChanging(int value);
    partial void OnProductQuantitySoldChanged();
    partial void OnRatingAverageChanging(decimal value);
    partial void OnRatingAverageChanged();
    partial void OnReviewCountChanging(System.Nullable<int> value);
    partial void OnReviewCountChanged();
    partial void OnEarliestDeliveryEstimateChanging(System.Nullable<int> value);
    partial void OnEarliestDeliveryEstimateChanged();
    partial void OnStandardDeliveryEstimateChanging(System.Nullable<int> value);
    partial void OnStandardDeliveryEstimateChanged();
    partial void OnUrlPathChanging(string value);
    partial void OnUrlPathChanged();
    partial void OnAccIDChanging(int value);
    partial void OnAccIDChanged();
    partial void OnIDDataChanging(System.Nullable<int> value);
    partial void OnIDDataChanged();
    #endregion
		
		public Product()
		{
			this._ProductDetails = new EntitySet<ProductDetail>(new Action<ProductDetail>(this.attach_ProductDetails), new Action<ProductDetail>(this.detach_ProductDetails));
			this._Reviews = new EntitySet<Review>(new Action<Review>(this.attach_Reviews), new Action<Review>(this.detach_Reviews));
			this._ReviewGPTCates = new EntitySet<ReviewGPTCate>(new Action<ReviewGPTCate>(this.attach_ReviewGPTCates), new Action<ReviewGPTCate>(this.detach_ReviewGPTCates));
			this._ProductCategory = default(EntityRef<ProductCategory>);
			this._Account = default(EntityRef<Account>);
			this._Info = default(EntityRef<Info>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryID", DbType="VarChar(50)")]
		public string ProductCategoryID
		{
			get
			{
				return this._ProductCategoryID;
			}
			set
			{
				if ((this._ProductCategoryID != value))
				{
					if (this._ProductCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ProductCategoryID = value;
					this.SendPropertyChanged("ProductCategoryID");
					this.OnProductCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSKU", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductSKU
		{
			get
			{
				return this._ProductSKU;
			}
			set
			{
				if ((this._ProductSKU != value))
				{
					this.OnProductSKUChanging(value);
					this.SendPropertyChanging();
					this._ProductSKU = value;
					this.SendPropertyChanged("ProductSKU");
					this.OnProductSKUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductOriginalPrice", DbType="Int NOT NULL")]
		public int ProductOriginalPrice
		{
			get
			{
				return this._ProductOriginalPrice;
			}
			set
			{
				if ((this._ProductOriginalPrice != value))
				{
					this.OnProductOriginalPriceChanging(value);
					this.SendPropertyChanging();
					this._ProductOriginalPrice = value;
					this.SendPropertyChanged("ProductOriginalPrice");
					this.OnProductOriginalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductPrice", DbType="Int NOT NULL")]
		public int ProductPrice
		{
			get
			{
				return this._ProductPrice;
			}
			set
			{
				if ((this._ProductPrice != value))
				{
					this.OnProductPriceChanging(value);
					this.SendPropertyChanging();
					this._ProductPrice = value;
					this.SendPropertyChanged("ProductPrice");
					this.OnProductPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductQuantitySold", DbType="Int NOT NULL")]
		public int ProductQuantitySold
		{
			get
			{
				return this._ProductQuantitySold;
			}
			set
			{
				if ((this._ProductQuantitySold != value))
				{
					this.OnProductQuantitySoldChanging(value);
					this.SendPropertyChanging();
					this._ProductQuantitySold = value;
					this.SendPropertyChanged("ProductQuantitySold");
					this.OnProductQuantitySoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingAverage", DbType="Decimal(3,2) NOT NULL")]
		public decimal RatingAverage
		{
			get
			{
				return this._RatingAverage;
			}
			set
			{
				if ((this._RatingAverage != value))
				{
					this.OnRatingAverageChanging(value);
					this.SendPropertyChanging();
					this._RatingAverage = value;
					this.SendPropertyChanged("RatingAverage");
					this.OnRatingAverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewCount", DbType="Int")]
		public System.Nullable<int> ReviewCount
		{
			get
			{
				return this._ReviewCount;
			}
			set
			{
				if ((this._ReviewCount != value))
				{
					this.OnReviewCountChanging(value);
					this.SendPropertyChanging();
					this._ReviewCount = value;
					this.SendPropertyChanged("ReviewCount");
					this.OnReviewCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarliestDeliveryEstimate", DbType="Int")]
		public System.Nullable<int> EarliestDeliveryEstimate
		{
			get
			{
				return this._EarliestDeliveryEstimate;
			}
			set
			{
				if ((this._EarliestDeliveryEstimate != value))
				{
					this.OnEarliestDeliveryEstimateChanging(value);
					this.SendPropertyChanging();
					this._EarliestDeliveryEstimate = value;
					this.SendPropertyChanged("EarliestDeliveryEstimate");
					this.OnEarliestDeliveryEstimateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardDeliveryEstimate", DbType="Int")]
		public System.Nullable<int> StandardDeliveryEstimate
		{
			get
			{
				return this._StandardDeliveryEstimate;
			}
			set
			{
				if ((this._StandardDeliveryEstimate != value))
				{
					this.OnStandardDeliveryEstimateChanging(value);
					this.SendPropertyChanging();
					this._StandardDeliveryEstimate = value;
					this.SendPropertyChanged("StandardDeliveryEstimate");
					this.OnStandardDeliveryEstimateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlPath", DbType="NVarChar(MAX)")]
		public string UrlPath
		{
			get
			{
				return this._UrlPath;
			}
			set
			{
				if ((this._UrlPath != value))
				{
					this.OnUrlPathChanging(value);
					this.SendPropertyChanging();
					this._UrlPath = value;
					this.SendPropertyChanged("UrlPath");
					this.OnUrlPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccID", DbType="Int NOT NULL")]
		public int AccID
		{
			get
			{
				return this._AccID;
			}
			set
			{
				if ((this._AccID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccIDChanging(value);
					this.SendPropertyChanging();
					this._AccID = value;
					this.SendPropertyChanged("AccID");
					this.OnAccIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDData", DbType="Int")]
		public System.Nullable<int> IDData
		{
			get
			{
				return this._IDData;
			}
			set
			{
				if ((this._IDData != value))
				{
					if (this._Info.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDataChanging(value);
					this.SendPropertyChanging();
					this._IDData = value;
					this.SendPropertyChanged("IDData");
					this.OnIDDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductDetail", Storage="_ProductDetails", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<ProductDetail> ProductDetails
		{
			get
			{
				return this._ProductDetails;
			}
			set
			{
				this._ProductDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Review", Storage="_Reviews", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<Review> Reviews
		{
			get
			{
				return this._Reviews;
			}
			set
			{
				this._Reviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ReviewGPTCate", Storage="_ReviewGPTCates", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<ReviewGPTCate> ReviewGPTCates
		{
			get
			{
				return this._ReviewGPTCates;
			}
			set
			{
				this._ReviewGPTCates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCategory_Product", Storage="_ProductCategory", ThisKey="ProductCategoryID", OtherKey="ProductCategoryID", IsForeignKey=true)]
		public ProductCategory ProductCategory
		{
			get
			{
				return this._ProductCategory.Entity;
			}
			set
			{
				ProductCategory previousValue = this._ProductCategory.Entity;
				if (((previousValue != value) 
							|| (this._ProductCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCategory.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._ProductCategory.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._ProductCategoryID = value.ProductCategoryID;
					}
					else
					{
						this._ProductCategoryID = default(string);
					}
					this.SendPropertyChanged("ProductCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Product", Storage="_Account", ThisKey="AccID", OtherKey="AccID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._AccID = value.AccID;
					}
					else
					{
						this._AccID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Info_Product", Storage="_Info", ThisKey="IDData", OtherKey="IDData", IsForeignKey=true)]
		public Info Info
		{
			get
			{
				return this._Info.Entity;
			}
			set
			{
				Info previousValue = this._Info.Entity;
				if (((previousValue != value) 
							|| (this._Info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Info.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Info.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._IDData = value.IDData;
					}
					else
					{
						this._IDData = default(Nullable<int>);
					}
					this.SendPropertyChanged("Info");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductDetails(ProductDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductDetails(ProductDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ReviewGPTCates(ReviewGPTCate entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ReviewGPTCates(ReviewGPTCate entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tiki.Review")]
	public partial class Review : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ProductID;
		
		private System.Nullable<int> _ReviewID;
		
		private string _Title;
		
		private string _Content;
		
		private System.Nullable<System.DateTime> _Created_Time;
		
		private string _CustomerID;
		
		private string _ImagesURL;
		
		private System.Nullable<int> _Rating;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnReviewIDChanging(System.Nullable<int> value);
    partial void OnReviewIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreated_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreated_TimeChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnImagesURLChanging(string value);
    partial void OnImagesURLChanged();
    partial void OnRatingChanging(System.Nullable<int> value);
    partial void OnRatingChanged();
    #endregion
		
		public Review()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewID", DbType="Int")]
		public System.Nullable<int> ReviewID
		{
			get
			{
				return this._ReviewID;
			}
			set
			{
				if ((this._ReviewID != value))
				{
					this.OnReviewIDChanging(value);
					this.SendPropertyChanging();
					this._ReviewID = value;
					this.SendPropertyChanged("ReviewID");
					this.OnReviewIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created_Time
		{
			get
			{
				return this._Created_Time;
			}
			set
			{
				if ((this._Created_Time != value))
				{
					this.OnCreated_TimeChanging(value);
					this.SendPropertyChanging();
					this._Created_Time = value;
					this.SendPropertyChanged("Created_Time");
					this.OnCreated_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50)")]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagesURL", DbType="NVarChar(MAX)")]
		public string ImagesURL
		{
			get
			{
				return this._ImagesURL;
			}
			set
			{
				if ((this._ImagesURL != value))
				{
					this.OnImagesURLChanging(value);
					this.SendPropertyChanging();
					this._ImagesURL = value;
					this.SendPropertyChanged("ImagesURL");
					this.OnImagesURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int")]
		public System.Nullable<int> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Review", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Reviews.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Reviews.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tiki.ReviewGPT")]
	public partial class ReviewGPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _GPTCateID;
		
		private string _texts;
		
		private EntityRef<ReviewGPTCate> _ReviewGPTCate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGPTCateIDChanging(System.Nullable<int> value);
    partial void OnGPTCateIDChanged();
    partial void OntextsChanging(string value);
    partial void OntextsChanged();
    #endregion
		
		public ReviewGPT()
		{
			this._ReviewGPTCate = default(EntityRef<ReviewGPTCate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPTCateID", DbType="Int")]
		public System.Nullable<int> GPTCateID
		{
			get
			{
				return this._GPTCateID;
			}
			set
			{
				if ((this._GPTCateID != value))
				{
					if (this._ReviewGPTCate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGPTCateIDChanging(value);
					this.SendPropertyChanging();
					this._GPTCateID = value;
					this.SendPropertyChanged("GPTCateID");
					this.OnGPTCateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_texts", DbType="NVarChar(MAX)")]
		public string texts
		{
			get
			{
				return this._texts;
			}
			set
			{
				if ((this._texts != value))
				{
					this.OntextsChanging(value);
					this.SendPropertyChanging();
					this._texts = value;
					this.SendPropertyChanged("texts");
					this.OntextsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReviewGPTCate_ReviewGPT", Storage="_ReviewGPTCate", ThisKey="GPTCateID", OtherKey="ID", IsForeignKey=true)]
		public ReviewGPTCate ReviewGPTCate
		{
			get
			{
				return this._ReviewGPTCate.Entity;
			}
			set
			{
				ReviewGPTCate previousValue = this._ReviewGPTCate.Entity;
				if (((previousValue != value) 
							|| (this._ReviewGPTCate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReviewGPTCate.Entity = null;
						previousValue.ReviewGPTs.Remove(this);
					}
					this._ReviewGPTCate.Entity = value;
					if ((value != null))
					{
						value.ReviewGPTs.Add(this);
						this._GPTCateID = value.ID;
					}
					else
					{
						this._GPTCateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ReviewGPTCate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tiki.ReviewGPTCate")]
	public partial class ReviewGPTCate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ProductID;
		
		private string _title;
		
		private string _sub_title;
		
		private EntitySet<ReviewGPT> _ReviewGPTs;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Onsub_titleChanging(string value);
    partial void Onsub_titleChanged();
    #endregion
		
		public ReviewGPTCate()
		{
			this._ReviewGPTs = new EntitySet<ReviewGPT>(new Action<ReviewGPT>(this.attach_ReviewGPTs), new Action<ReviewGPT>(this.detach_ReviewGPTs));
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(MAX)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_title", DbType="NVarChar(MAX)")]
		public string sub_title
		{
			get
			{
				return this._sub_title;
			}
			set
			{
				if ((this._sub_title != value))
				{
					this.Onsub_titleChanging(value);
					this.SendPropertyChanging();
					this._sub_title = value;
					this.SendPropertyChanged("sub_title");
					this.Onsub_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReviewGPTCate_ReviewGPT", Storage="_ReviewGPTs", ThisKey="ID", OtherKey="GPTCateID")]
		public EntitySet<ReviewGPT> ReviewGPTs
		{
			get
			{
				return this._ReviewGPTs;
			}
			set
			{
				this._ReviewGPTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ReviewGPTCate", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ReviewGPTCates.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ReviewGPTCates.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReviewGPTs(ReviewGPT entity)
		{
			this.SendPropertyChanging();
			entity.ReviewGPTCate = this;
		}
		
		private void detach_ReviewGPTs(ReviewGPT entity)
		{
			this.SendPropertyChanging();
			entity.ReviewGPTCate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Users.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccID;
		
		private string _AccFirstName;
		
		private string _AccLastName;
		
		private string _AccEmail;
		
		private string _AccPhoneNumber;
		
		private System.Nullable<System.DateTime> _AccDateOfBirth;
		
		private string _AccUserName;
		
		private string _AccPassword;
		
		private EntitySet<Model> _Models;
		
		private EntitySet<Product> _Products;
		
		private EntitySet<Info> _Infos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccIDChanging(int value);
    partial void OnAccIDChanged();
    partial void OnAccFirstNameChanging(string value);
    partial void OnAccFirstNameChanged();
    partial void OnAccLastNameChanging(string value);
    partial void OnAccLastNameChanged();
    partial void OnAccEmailChanging(string value);
    partial void OnAccEmailChanged();
    partial void OnAccPhoneNumberChanging(string value);
    partial void OnAccPhoneNumberChanged();
    partial void OnAccDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnAccDateOfBirthChanged();
    partial void OnAccUserNameChanging(string value);
    partial void OnAccUserNameChanged();
    partial void OnAccPasswordChanging(string value);
    partial void OnAccPasswordChanged();
    #endregion
		
		public Account()
		{
			this._Models = new EntitySet<Model>(new Action<Model>(this.attach_Models), new Action<Model>(this.detach_Models));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Infos = new EntitySet<Info>(new Action<Info>(this.attach_Infos), new Action<Info>(this.detach_Infos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccID
		{
			get
			{
				return this._AccID;
			}
			set
			{
				if ((this._AccID != value))
				{
					this.OnAccIDChanging(value);
					this.SendPropertyChanging();
					this._AccID = value;
					this.SendPropertyChanged("AccID");
					this.OnAccIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccFirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccFirstName
		{
			get
			{
				return this._AccFirstName;
			}
			set
			{
				if ((this._AccFirstName != value))
				{
					this.OnAccFirstNameChanging(value);
					this.SendPropertyChanging();
					this._AccFirstName = value;
					this.SendPropertyChanged("AccFirstName");
					this.OnAccFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccLastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccLastName
		{
			get
			{
				return this._AccLastName;
			}
			set
			{
				if ((this._AccLastName != value))
				{
					this.OnAccLastNameChanging(value);
					this.SendPropertyChanging();
					this._AccLastName = value;
					this.SendPropertyChanged("AccLastName");
					this.OnAccLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccEmail", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AccEmail
		{
			get
			{
				return this._AccEmail;
			}
			set
			{
				if ((this._AccEmail != value))
				{
					this.OnAccEmailChanging(value);
					this.SendPropertyChanging();
					this._AccEmail = value;
					this.SendPropertyChanged("AccEmail");
					this.OnAccEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccPhoneNumber", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string AccPhoneNumber
		{
			get
			{
				return this._AccPhoneNumber;
			}
			set
			{
				if ((this._AccPhoneNumber != value))
				{
					this.OnAccPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._AccPhoneNumber = value;
					this.SendPropertyChanged("AccPhoneNumber");
					this.OnAccPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccDateOfBirth", DbType="Date")]
		public System.Nullable<System.DateTime> AccDateOfBirth
		{
			get
			{
				return this._AccDateOfBirth;
			}
			set
			{
				if ((this._AccDateOfBirth != value))
				{
					this.OnAccDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._AccDateOfBirth = value;
					this.SendPropertyChanged("AccDateOfBirth");
					this.OnAccDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccUserName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string AccUserName
		{
			get
			{
				return this._AccUserName;
			}
			set
			{
				if ((this._AccUserName != value))
				{
					this.OnAccUserNameChanging(value);
					this.SendPropertyChanging();
					this._AccUserName = value;
					this.SendPropertyChanged("AccUserName");
					this.OnAccUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccPassword", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string AccPassword
		{
			get
			{
				return this._AccPassword;
			}
			set
			{
				if ((this._AccPassword != value))
				{
					this.OnAccPasswordChanging(value);
					this.SendPropertyChanging();
					this._AccPassword = value;
					this.SendPropertyChanged("AccPassword");
					this.OnAccPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Model", Storage="_Models", ThisKey="AccID", OtherKey="AccID")]
		public EntitySet<Model> Models
		{
			get
			{
				return this._Models;
			}
			set
			{
				this._Models.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Product", Storage="_Products", ThisKey="AccID", OtherKey="AccID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Info", Storage="_Infos", ThisKey="AccID", OtherKey="AccID")]
		public EntitySet<Info> Infos
		{
			get
			{
				return this._Infos;
			}
			set
			{
				this._Infos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Models(Model entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Models(Model entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Infos(Info entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Infos(Info entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Users.Info")]
	public partial class Info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDData;
		
		private int _AccID;
		
		private string _DataName;
		
		private string _DataDescription;
		
		private System.Nullable<System.DateTime> _DateScrape;
		
		private EntitySet<Product> _Products;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDataChanging(int value);
    partial void OnIDDataChanged();
    partial void OnAccIDChanging(int value);
    partial void OnAccIDChanged();
    partial void OnDataNameChanging(string value);
    partial void OnDataNameChanged();
    partial void OnDataDescriptionChanging(string value);
    partial void OnDataDescriptionChanged();
    partial void OnDateScrapeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateScrapeChanged();
    #endregion
		
		public Info()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDData", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDData
		{
			get
			{
				return this._IDData;
			}
			set
			{
				if ((this._IDData != value))
				{
					this.OnIDDataChanging(value);
					this.SendPropertyChanging();
					this._IDData = value;
					this.SendPropertyChanged("IDData");
					this.OnIDDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccID", DbType="Int NOT NULL")]
		public int AccID
		{
			get
			{
				return this._AccID;
			}
			set
			{
				if ((this._AccID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccIDChanging(value);
					this.SendPropertyChanging();
					this._AccID = value;
					this.SendPropertyChanged("AccID");
					this.OnAccIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DataName
		{
			get
			{
				return this._DataName;
			}
			set
			{
				if ((this._DataName != value))
				{
					this.OnDataNameChanging(value);
					this.SendPropertyChanging();
					this._DataName = value;
					this.SendPropertyChanged("DataName");
					this.OnDataNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataDescription", DbType="NVarChar(MAX)")]
		public string DataDescription
		{
			get
			{
				return this._DataDescription;
			}
			set
			{
				if ((this._DataDescription != value))
				{
					this.OnDataDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DataDescription = value;
					this.SendPropertyChanged("DataDescription");
					this.OnDataDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateScrape", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateScrape
		{
			get
			{
				return this._DateScrape;
			}
			set
			{
				if ((this._DateScrape != value))
				{
					this.OnDateScrapeChanging(value);
					this.SendPropertyChanging();
					this._DateScrape = value;
					this.SendPropertyChanged("DateScrape");
					this.OnDateScrapeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Info_Product", Storage="_Products", ThisKey="IDData", OtherKey="IDData")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Info", Storage="_Account", ThisKey="AccID", OtherKey="AccID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Infos.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Infos.Add(this);
						this._AccID = value.AccID;
					}
					else
					{
						this._AccID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Info = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Info = null;
		}
	}
}
#pragma warning restore 1591
